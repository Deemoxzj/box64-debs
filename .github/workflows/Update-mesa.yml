name: update-mesa-arm64-nightly

on:
  schedule:
     - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  update-mesa-nightly:
    runs-on: ubuntu-24.10
    container: ubuntu:24.10
    defaults:
      run:
        shell: bash

    steps:
      - name: Install dependencies
        run: |
          # add dependencies expected by scripts
          export DEBIAN_FRONTEND=noninteractive
          echo "deb [arch=amd64,i386] http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ oracular main restricted universe multiverse
          deb-src [arch=amd64,i386] http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ oracular main restricted universe multiverse
          deb [arch=amd64,i386] http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ oracular-updates main restricted universe multiverse
          deb-src [arch=amd64,i386] http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ oracular-updates main restricted universe multiverse
          deb [arch=amd64,i386] http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ oracular-backports main restricted universe multiverse
          deb-src [arch=amd64,i386] http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ oracular-backports main restricted universe multiverse
          deb [arch=arm64,armhf] http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ oracular main restricted universe multiverse
          deb-src [arch=arm64,armhf] http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ oracular main restricted universe multiverse
          deb [arch=arm64,armhf] http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ oracular-updates main restricted universe multiverse
          deb-src [arch=arm64,armhf] http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ oracular-updates main restricted universe multiverse
          deb [arch=arm64,armhf] http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ oracular-backports main restricted universe multiverse
          deb-src [arch=arm64,armhf] http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ oracular-backports main restricted universe multiverse" > /etc/apt/sources.list
          apt update
          dpkg --add-architecture arm64
          apt full-upgrade -y
          apt install -y gcc-14-aarch64-linux-gnu g++-14-aarch64-linux-gnu meson cmake sudo git llvm-19:arm64 llvm-19-dev:arm64 clang-19:arm64 libclang-19-dev:arm64 libpolly-19-dev:arm64 curl python3:arm64 python3-mako:arm64 python3-yaml:arm64 libglvnd-dev:arm64 pkg-config:arm64 libglvnd-dev libvdpau-dev:arm64 libvdpau-dev libva-dev:arm64 libva-dev binutils-aarch64-linux-gnu-dbg
          
      - name: Build mesa
        run: |
          cd /opt/
          git clone --depth 1 https://gitlab.freedesktop.org/mesa/mesa.git mesa-sources
          git clone https://github.com/MastaG/mesa-turnip-ppa.git
          cp mesa-turnip-ppa/turnip-patches/* mesa-sources/
          cd mesa-sources
          patch -p1 < dri3.patch
          patch -p1 < fix-for-anon-file.patch
          patch -p1 < fix-for-getprogname.patch
          mkdir b
          cd b
          echo "meson .. --cross-file=cross_arm64.txt --libdir=lib/aarch64-linux-gnu -Dgallium-drivers=freedreno,virgl,zink,d3d12,softpipe,llvmpipe,svga -Dvulkan-drivers=freedreno,swrast,virtio -Dglx=dri -Dplatforms=x11,wayland -Dbuildtype=release -Dllvm=enabled -Dxlib-lease=enabled -Dgles2=enabled -Dgles1=enabled -Dgallium-nine=true -Dgallium-opencl=icd -Degl-native-platform=x11 -Degl=enabled -Dfreedreno-kmds=kgsl,msm,virtio,wsl  -Dvulkan-beta=true -Dglx-direct=true -Dtools=drm-shim,freedreno,etnaviv,glsl,nir -Dgallium-vdpau=enabled -Dopengl=true -Dosmesa=true -Dpower8=enabled -Dglvnd=enabled -Dteflon=true -Dvideo-codecs=all -Dgallium-d3d12-video=enabled -Dgallium-d3d12-graphics=enabled -Dxmlconfig=enabled -Dgbm=enabled -Dshader-cache=enabled -Dgallium-va=enabled -Dgallium-xa=enabled -Dgallium-rusticl=true -Dgallium-rusticl-enable-drivers=auto -Dshader-cache-max-size='1G' -Dmicrosoft-clc=enabled -Dspirv-to-dxil=true -Ddraw-use-llvm=true -Dllvm-orcjit=true -Dsse2=true -Ddatasources=freedreno --prefix=/opt/mesa/" | sudo tee -a /opt/mesa-sources/b/build.sh
          echo "[binaries]
          c = 'aarch64-linux-gnu-gcc'
          cpp = 'aarch64-linux-gnu-g++'
          ar = 'aarch64-linux-gnu-ar'
          strip = 'aarch64-linux-gnu-strip'
          pkgconfig = 'aarch64-linux-gnu-pkg-config'
          rust = '/usr/bin/rustc'
          [host_machine]
          system = 'linux'
          cpu_family = 'aarch64'
          cpu = 'aarch64'
          endian = 'little'" | sudo tee -a /opt/mesa-sources/b/cross_arm64.txt
          chmod +x build.sh
          ./build.sh
          apt install rustc:arm64 -y
          ./build.sh
          apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu -y
          ./build.sh
          apt install bindgen:arm64 libclc-19-dev libdrm-dev:arm64
          ./build.sh
          apt install python3-mako -y
          ./build.sh
          apt install python3-yaml -y
          ./build.sh
          apt install llvm-19 llvm-19-dev -y
          ./build.sh
          cd /opt/
          tar -cjvf mesa-nightly-arm64.tar.gz mesa

      - uses: actions/upload-artifact@v3
        with:
          name: mesa-nightly-arm64
          path: /opt/mesa-nightly-arm64.tar.gz
